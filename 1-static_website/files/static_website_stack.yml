AWSTemplateFormatVersion: "2010-09-09"

Description: This stack deploys a basic HTTP static website

Parameters:
  BucketName:
    Description: "Name of the bucket to be created"
    Type: String
    Default: bucket-static-website-123
  DomainName:
    Description: "DNS Domain of the website"
    Type: String
    Default: example.com

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Ref: BucketName
      WebsiteConfiguration:
        IndexDocument: "index.html"
        ErrorDocument: "error.html"

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: 
        Ref: BucketName
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource:
              Fn::Sub: "arn:aws:s3:::${BucketName}/*"

  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 
          Ref: BucketName

  
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403 # not found
            ResponseCode: 404
            ResponsePagePath: "/error.html"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 3600 # in seconds
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: 86400 # in seconds
          MinTTL: 60 # in seconds
          TargetOriginId: s3origin
          ViewerProtocolPolicy: "allow-all"
        # This DefaultRootObject configuration is not enough.
        DefaultRootObject: "/index.html"
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName:
              Fn::GetAtt: [ S3Bucket, DomainName ]
            Id: s3origin
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Sub: "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        PriceClass: "PriceClass_All"


  DNSEntries:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName:
        Fn::Sub: ${DomainName}.
      RecordSets:
        - Name: 
            Ref: BucketName
          Type: CNAME
          TTL: "300"
          ResourceRecords:
          - Fn::GetAtt: [ S3Bucket, RegionalDomainName ] 

Outputs:
  Bucket:
    Description: "S3 Bucket Name"
    Value: 
      Ref: S3Bucket
  BucketUrl:
    Description: "S3 Bucket Url"
    Value:
      Fn::GetAtt: [ S3Bucket, WebsiteURL ]
  DistributionId:
    Description: "CloudFront Distribution ID"
    Value: 
      Ref: CloudFrontDistribution
  Domain:
    Description: "Cloudfront Domain"
    Value:
      Fn::GetAtt: [ CloudFrontDistribution, DomainName ]